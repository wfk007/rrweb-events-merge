(function(e,o){typeof exports=="object"&&typeof module<"u"?o(exports,require("rrweb"),require("rrweb-snapshot")):typeof define=="function"&&define.amd?define(["exports","rrweb","rrweb-snapshot"],o):(e=typeof globalThis<"u"?globalThis:e||self,o(e["rrweb-events-merge"]={},e.rrweb,e.rrwebSnapshot))})(this,function(e,o,w){"use strict";var m=(t=>(t[t.DomContentLoaded=0]="DomContentLoaded",t[t.Load=1]="Load",t[t.FullSnapshot=2]="FullSnapshot",t[t.IncrementalSnapshot=3]="IncrementalSnapshot",t[t.Meta=4]="Meta",t[t.Custom=5]="Custom",t[t.Plugin=6]="Plugin",t))(m||{});const{getWindowScroll:S}=o.utils,a=(t,n)=>{typeof n=="function"&&n(t)},b=t=>{const{events:n,iframe:f,snapshotOptions:c={},startTimeStamp:g,endTimeStamp:M,onError:i}=t;if(!n||!Array.isArray(n)||!n.length||!c.mirror||!f)return a("events and mirror and iframe is required",i),[];const l=f.contentDocument,h=f.contentWindow;if(!l||!h)return a("contentDocument and contentWindow in iframe is required",i),[];let p;try{p=w.snapshot(l,c)}catch{return a("snapshot error",i),[]}const s=[];let d;for(let u=0;u<n.length;u++){const r=n[u];if(r.type===m.Meta&&(d=r),!(r.timestamp<g)){if(r.timestamp>M)break;if(!s.length){if(!d&&typeof i=="function")return a("Meta event not found",i),[];s.push({...d,timestamp:r.timestamp-2}),s.push({type:m.FullSnapshot,data:{node:p,initialOffset:S(h)},timestamp:r.timestamp-1})}s.push(r)}}return s};e.mergeEvents=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
